1. 算法面试的准备范围
    重点在于不要轻视基础算法和数据结构，不要执着于“有意思”和“高大上”。
    --各种排序
    --各种基础数据结构和算法实现，如堆，二叉树，图
    --基础数据结构的使用：链表，队列，栈，哈希表，图，Trie,并查集
    --基础算法：深度优先，广度优先，二分查找，递归
    --基本算法思想：递归，分治，回溯搜索，贪心，动态规划

2.面试中出现概率较低的数据结构：
     红黑树，B-Tree, 斐波那契堆
   出现概率较低的算法：
     计算几何，数论，FFT

3. 数据规模大概在10000，即O(n^2)算法可用；
   数据规模在100,0000及以上，最好用O(nlogn)算法。

4. 不要忽略暴力解法，理论上所有问题都存在暴力解法，这是思考其他更高效的解法的基础。

5. 一个典型的用空间换时间的数据结构：哈希表

6. 实际写程序时，注意极端条件的判断：
   -- 数组为空？数组越界？字符串为空？数量为0？指针为NULL？

7. 对于基本问题进行白板编程的能力一定要具备。

8. 对数据规模有个概念：
   如果要想在1s之内解决问题：（以最简单的加法运算为例）
    -- O(n^2)算法可以处理大约10^4级别的数据；
    -- O(nlogn)算法可以处理大约10^7级别的数据；
    -- O(n)算法可以处理大约10^8级别的数据;
    面对更复杂的问题，为了保险起见，可将以上数量级再除以10.
    所以在设计算法时，要先明白针对多大规模的数据。

9.要注意递归调用会产生额外空间代价，用到了系统栈





   


